using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;

namespace tictacOrg
{
    class Program
    {
        static string[] pos = new string[10] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }; // position array

        static void DrawBoard() // Draw board method 
        {
            Console.WriteLine("\n");
            Console.WriteLine("\n");
            Console.WriteLine("\n");
            Console.WriteLine("\t \t \t \t \t \t \t " + "   {0}  |  {1}  |  {2}   ", pos[1], pos[2], pos[3]);
            Console.WriteLine("\t \t \t \t \t \t \t " + "-------------------");
            Console.WriteLine("\t \t \t \t \t \t \t " + "   {0}  |  {1}  |  {2}   ", pos[4], pos[5], pos[6]);
            Console.WriteLine("\t \t \t \t \t \t \t " + "-------------------");
            Console.WriteLine("\t \t \t \t \t \t \t " + "   {0}  |  {1}  |  {2}   ", pos[7], pos[8], pos[9]);
        }

        static void Main(string[] args) // Main 
        {
            DrawWel();
            string player1 = "", player2 = "";
            int choice = 0, turn = 1, score1 = 0, score2 = 0;
            bool winFlag = false, playing = true, correctInput = false;

            Console.WriteLine(" player Ones name:");
            player1 = Console.ReadLine();
            Console.Beep(1320, 500);
            Console.WriteLine("player Twos name:");
            player2 = Console.ReadLine();
            Console.Beep(1320, 500);
            Console.WriteLine("{0} is O and {1} is X.", player1, player2);
            Console.WriteLine("{0} goes first.", player1);
            Console.Beep(1188, 250);
            Console.Beep(1188, 250);
            Console.Beep(1188, 250);
            Console.ReadLine();
            Console.Clear();

            while (playing == true)
            {
                while (winFlag == false) // Game loop 
                {
                    DrawBoard();
                    Console.WriteLine("");

                    Console.WriteLine("Score: {0} - {1}     {2} - {3}", player1, score1, player2, score2);
                    if (turn == 1)
                    {
                        Console.Beep(1320, 125);
                        Console.WriteLine("{0}'s (O) turn", player1);
                    }
                    if (turn == 2)
                    {
                        Console.Beep(1320, 125);
                        Console.WriteLine("{0}'s (X) turn", player2);
                    }

                    while (correctInput == false)
                    {
                        Console.WriteLine("Choose position");
                        choice = int.Parse(Console.ReadLine());
                        if (choice > 0 && choice < 10)
                        {
                            correctInput = true;
                        }
                        else
                        {
                            continue;
                        }
                    }

                    correctInput = false; // Reset 

                    if (turn == 1)
                    {
                        if (pos[choice] == "X") // Checks to see if spot is taken  
                        {
                            Console.Beep(1188, 250);
                            Console.Beep(1320, 500);
                            Console.Beep(658, 125);
                            Console.Beep(658, 125);
                            Console.Beep(658, 125);
                            Console.WriteLine("You can't do that! ");                                                                                 
                            Console.Write("Try again.");
                            Console.ReadLine();
                            Console.Clear();
                            continue;
                        }
                        else
                        {
                            pos[choice] = "O";
                        }
                    }
                    if (turn == 2)
                    {
                        if (pos[choice] == "O") // Checks to see if spot is taken already
                        {
                            Console.Beep(1188, 250);
                            Console.Beep(1320, 500);
                            Console.Beep(658, 125);
                            Console.Beep(658, 125);
                            Console.Beep(658, 125);
                            Console.WriteLine("You can't do that! ");
                            Console.Write("Try again.");
                            Console.ReadLine();
                            Console.Clear();
                            continue;
                        }
                        else
                        {
                            pos[choice] = "X";
                        }
                    }

                    winFlag = CheckWin();

                    if (winFlag == false)
                    {
                        if (turn == 1)
                        {
                            turn = 2;
                        }
                        else if (turn == 2)
                        {
                            turn = 1;
                        }
                        Console.Clear();
                    }
                }

                Console.Clear();

                DrawBoard();

                for (int i = 1; i < 10; i++) // Resets board 
                {
                    pos[i] = i.ToString();
                }

                if (winFlag == false) // No one won 
                {
                    Console.WriteLine("Draw!");
                    Console.Beep(1320, 125);
                    Console.Beep(1188, 125);
                    Console.Beep(1056, 250);
                    Console.Beep(990, 250);
                    Console.Beep(880, 500);
                    Console.Beep(880, 250);
                    Console.WriteLine("Score: {0} - {1}     {2} - {3}", player1, score1, player2, score2);
                    Console.WriteLine("");
                    Console.WriteLine("What now?");
                    Console.WriteLine("1. again");
                    Console.WriteLine("2. exit");
                    Console.WriteLine("");

                    while (correctInput == false)
                    {
                        Console.WriteLine("Choose option: ");
                        choice = int.Parse(Console.ReadLine());

                        if (choice > 0 && choice < 3)
                        {
                            correctInput = true;
                        }
                    }

                    correctInput = false; // Reset 

                    switch (choice)
                    {
                        case 1:
                            break;
                        case 2:
                            Console.Clear();
                            Console.WriteLine("Till Next Time!");
                            Console.Beep(1320, 125);
                            Console.Beep(1188, 125);
                            Console.Beep(1056, 250);
                            Console.Beep(990, 250);
                            Console.Beep(880, 500);
                            Console.Beep(880, 250);
                            Console.ReadLine();
                            playing = false;
                            break;
                    }
                }

                if (winFlag == true) // Winner
                {
                    if (turn == 1)
                    {
                        score1++;
                        Console.WriteLine("{0} wins!", player1);
                        Console.Beep(660, 500);
                        Console.Beep(880, 1000);
                        Console.Beep(838, 2000);
                        Console.WriteLine("What now?");
                        Console.WriteLine("1. again");
                        Console.WriteLine("2. exit");

                        while (correctInput == false)
                        {
                            Console.WriteLine("Enter your option: ");
                            choice = int.Parse(Console.ReadLine());

                            if (choice > 0 && choice < 3)
                            {
                                correctInput = true;
                            }
                        }

                        correctInput = false; // Reset 

                        switch (choice)
                        {
                            case 1:
                                Console.Clear();
                                winFlag = false;
                                break;
                            case 2:
                                Console.Clear();
                                Console.WriteLine("Till Next Time!");
                                Console.Beep(1320, 125);
                                Console.Beep(1188, 125);
                                Console.Beep(1056, 250);
                                Console.Beep(990, 250);
                                Console.Beep(880, 500);
                                Console.Beep(880, 250);
                                Console.ReadLine();
                                playing = false;
                                break;
                        }
                    }

                    if (turn == 2)
                    {
                        score2++;
                        Console.WriteLine("{0} wins!", player2);
                        Console.Beep(660, 500);
                        Console.Beep(880, 1000);
                        Console.Beep(838, 2000);
                        Console.WriteLine("What now?");
                        Console.WriteLine("1. again");
                        Console.WriteLine("2. exit");

                        while (correctInput == false)
                        {
                            Console.WriteLine("Enter your option: ");
                            choice = int.Parse(Console.ReadLine());

                            if (choice > 0 && choice < 3)
                            {
                                correctInput = true;
                            }
                        }

                        correctInput = false; // Reset 

                        switch (choice)
                        {
                            case 1:
                                Console.Clear();
                                winFlag = false;
                                break;
                            case 2:
                                Console.Clear();
                                Console.WriteLine("Till Next Time!");
                                Console.Beep(1320, 125);
                                Console.Beep(1188, 125);
                                Console.Beep(1056, 250);
                                Console.Beep(990, 250);
                                Console.Beep(880, 500);
                                Console.Beep(880, 250);
                                Console.ReadLine();
                                playing = false;
                                break;
                        }
                    }
                }
            }
        }

        static bool CheckWin() // Win checker method 
        {
            if (pos[1] == "O" && pos[2] == "O" && pos[3] == "O") // Horizontal 
            {
                return true;
            }
            else if (pos[4] == "O" && pos[5] == "O" && pos[6] == "O")
            {
                return true;
            }
            else if (pos[7] == "O" && pos[8] == "O" && pos[9] == "O")
            {
                return true;
            }

            else if (pos[1] == "O" && pos[5] == "O" && pos[9] == "O") // Diagonal 
            {
                return true;
            }
            else if (pos[7] == "O" && pos[5] == "O" && pos[3] == "O")
            {
                return true;
            }

            else if (pos[1] == "O" && pos[4] == "O" && pos[7] == "O")// Vertical 
            {
                return true;
            }
            else if (pos[2] == "O" && pos[5] == "O" && pos[8] == "O")
            {
                return true;
            }
            else if (pos[3] == "O" && pos[6] == "O" && pos[9] == "O")
            {
                return true;
            }

            if (pos[1] == "X" && pos[2] == "X" && pos[3] == "X") // Horizontal 
            {
                return true;
            }
            else if (pos[4] == "X" && pos[5] == "X" && pos[6] == "X")
            {
                return true;
            }
            else if (pos[7] == "X" && pos[8] == "X" && pos[9] == "X")
            {
                return true;
            }

            else if (pos[1] == "X" && pos[5] == "X" && pos[9] == "X") // Diagonal 
            {
                return true;
            }
            else if (pos[7] == "X" && pos[5] == "X" && pos[3] == "X")
            {
                return true;
            }

            else if (pos[1] == "X" && pos[4] == "X" && pos[7] == "X") // Vertical
            {
                return true;
            }
            else if (pos[2] == "X" && pos[5] == "X" && pos[8] == "X")
            {
                return true;
            }
            else if (pos[3] == "X" && pos[6] == "X" && pos[9] == "X")
            {
                return true;
            }
            else // No winner 
            {
                return false;
            }
        }
        static void DrawWel()
        {
            Console.Beep(658, 125);
            Console.Beep(1320, 500);
            Console.Beep(990, 250);
            Console.Beep(1056, 250);
            Console.Beep(1188, 250);
            Console.SetCursorPosition(0, 3);
            Console.Write("\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @" _    _      _ " + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"| |  | |    | |" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"| |  | | ___| |" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"| |/\| |/ _ \ |/ __/ _ \| '_ ` _ \ / _ \" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"\  /\  /  __/ | (_| (_) | | | | | |  __/" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @" \/  \/ \___|_|\___\___/|_| |_| |_|\___|" + "\n");
            Thread.Sleep(500);
            Console.Write("\t \t \t \t \t \t \t \t " + @"  _______ " + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @" | _   _ |" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"    | | ___" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"    | |/ _ \" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"    | | (_) |" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"    \_/\___/" + "\n");
            Thread.Sleep(600);
            Console.Write("\t \t \t \t \t \t \t \t " + @" _____ _          _____            _____  " + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"|_   _(_)       | _   _ |        | _   _ |" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"  | |  _  ___      | | __ _  ___    | | ___   ___" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"  | | | |/ __|     | |/ _` |/ __|   | |/ _ \ / _ \" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"  | | | | (__      | | (_| | (__    | | (_) |  __/" + "\n");
            Console.Write("\t \t \t \t \t \t \t \t " + @"  \_/ |_|\___|     \_/\__,_|\___|   \_/\___/ \___|" + "\n");
            Console.Beep(660, 1000);
            Console.Beep(528, 1000);
            Console.Beep(594, 1000);
            Console.Beep(495, 1000);
            Console.Beep(440, 1000);

        }
   
    }
}
